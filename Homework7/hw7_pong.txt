var puck = {  x: 200,  y: 200,  xSpeed: 40,  ySpeed: -40,  r: 10};var edgeOffset = 20;var player1 = {  x: edgeOffset,  y: 170,  ht: 50,  wd: 10,  score: 0,  increment: false};var player2 = {  x: 400-edgeOffset,  y: 170,  ht: 50,  wd: 10,  score: 0,  increment: false};var pingpong;var win;function preload(){  pingpong = loadSound('Pew_Pew.mp3');  win = loadSound('Short_triumphal_fanfare.mp3');}function setup() {  createCanvas(400, 400);}function draw() {  background(0);    textSize(22);  fill(255);  text(player1.score,92,40);  text(player2.score,297,40);  textSize(12);  text('Get 5 scores to win\nplayer1: "q" and "a"\nplayer2: "up" and "down"',20,345);    // draw puck  ellipse(puck.x, puck.y, puck.r*2);    // move puck  if (puck.y < puck.r || puck.y > height - puck.r) {    puck.ySpeed = -puck.ySpeed;  }    puck.x += puck.xSpeed;  puck.y += puck.ySpeed;    // draw paddles  rect(player1.x, player1.y, player1.wd, player1.ht);  rect(player2.x-player2.wd, player2.y, player2.wd, player2.ht);    // paddle movement  if (player1.paddleDown && ! player1.paddleUp) {    player1.y += 5;  }  if (player1.paddleUp && ! player1.paddleDown) {    player1.y -= 5;  }   if (player2.paddleDown && ! player2.paddleUp) {    player2.y += 5;  }  if (player2.paddleUp && ! player2.paddleDown) {    player2.y -= 5;  }    // don't let paddles outside of the play area  player1.y = constrain(player1.y, 0, height-player1.ht-1);  player2.y = constrain(player2.y, 0, height-player2.ht-1);    // bounce puck on paddles -- player 1 -- based on x-coordinate  if (puck.x - puck.r <= player1.x + player1.wd) {    // check if puck is within paddle height...    if (puck.y > player1.y && puck.y < player1.y + player1.ht) {      puck.xSpeed = abs(puck.xSpeed);      pingpong.play();    } else if (player2.increment == false){      player2.score = player2.score + 1;      player2.increment = true;      }      }else{player2.increment = false}    // bounce puck on paddles -- player 2 -- based on x-coordinate  if (puck.x + puck.r > player2.x - player2.wd) {    // check if puck is within paddle height...    if (puck.y > player2.y && puck.y < player2.y + player2.ht) {      puck.xSpeed = -abs(puck.xSpeed);      pingpong.play();    } else if(player1.increment == false){      player1.score+=1;      player1.increment = true;    }  }else{player1.increment = false}    //stop  if(player1.score > 4 || player2.score > 4){  win.play();  textSize(18);  text('WINNER WINNER CHICKEN DINNER',45,90);  textSize(15);  text('Reset: Spacebar',19,320);  puck.x = width/2  puck.y = height/2      }    }// keyboard inputfunction keyPressed() {  print(key);  if (key == 'A') {    player1.paddleDown = true;  } else if (key == 'Q') {    player1.paddleUp = true;  }    if (keyCode == DOWN_ARROW) {    player2.paddleDown = true;  } else if (keyCode == UP_ARROW) {    player2.paddleUp = true;  } if (key == ' '){    player1.score = 0;    player2.score = 0;        }}function keyReleased() {  if (key == 'A') {    player1.paddleDown = false;  } else if (key == 'Q') {    player1.paddleUp = false;  }    if (keyCode == DOWN_ARROW) {    player2.paddleDown = false;  } else if (keyCode == UP_ARROW) {    player2.paddleUp = false;  }}